{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment for alv\\\\frontend\\\\src\\\\components\\\\ParkingList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchSlots, updateSlot } from '../api';\nimport ParkingSlot from './ParkingSlot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParkingList = () => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  useEffect(() => {\n    fetchSlots().then(({\n      data\n    }) => setSlots(data));\n  }, []);\n  const updateSlotStatus = async id => {\n    const updatedSlot = await updateSlot(id, {\n      isOccupied: true,\n      vehicleNumber: 'ABC123'\n    });\n    setSlots(slots.map(slot => slot._id === id ? updatedSlot.data : slot));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parking Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), slots.map(slot => /*#__PURE__*/_jsxDEV(ParkingSlot, {\n      slot: slot,\n      updateSlotStatus: updateSlotStatus\n    }, slot._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(ParkingList, \"2UqXCi85+ev3OjCCdaN74aZmXow=\");\n_c = ParkingList;\nexport default ParkingList;\nvar _c;\n$RefreshReg$(_c, \"ParkingList\");","map":{"version":3,"names":["React","useEffect","useState","fetchSlots","updateSlot","ParkingSlot","jsxDEV","_jsxDEV","ParkingList","_s","slots","setSlots","then","data","updateSlotStatus","id","updatedSlot","isOccupied","vehicleNumber","map","slot","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/assignment for alv/frontend/src/components/ParkingList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchSlots, updateSlot } from '../api';\r\nimport ParkingSlot from './ParkingSlot';\r\n\r\nconst ParkingList = () => {\r\n    const [slots, setSlots] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchSlots().then(({ data }) => setSlots(data));\r\n    }, []);\r\n\r\n    const updateSlotStatus = async (id) => {\r\n        const updatedSlot = await updateSlot(id, { isOccupied: true, vehicleNumber: 'ABC123' });\r\n        setSlots(slots.map((slot) => (slot._id === id ? updatedSlot.data : slot)));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Parking Slots</h1>\r\n            {slots.map((slot) => (\r\n                <ParkingSlot key={slot._id} slot={slot} updateSlotStatus={updateSlotStatus} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ParkingList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,UAAU,QAAQ,QAAQ;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZE,UAAU,CAAC,CAAC,CAACS,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAKF,QAAQ,CAACE,IAAI,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAK;IACnC,MAAMC,WAAW,GAAG,MAAMZ,UAAU,CAACW,EAAE,EAAE;MAAEE,UAAU,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAS,CAAC,CAAC;IACvFP,QAAQ,CAACD,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,GAAG,KAAKN,EAAE,GAAGC,WAAW,CAACH,IAAI,GAAGO,IAAK,CAAC,CAAC;EAC9E,CAAC;EAED,oBACIb,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBhB,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACZb,OAAA,CAACF,WAAW;MAAgBe,IAAI,EAAEA,IAAK;MAACN,gBAAgB,EAAEA;IAAiB,GAAzDM,IAAI,CAACC,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmD,CAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjB,EAAA,CApBID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}